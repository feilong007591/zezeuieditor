<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="28">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import data.PropertyType;
			
			import event.UIEvent;
			
			import fl.data.DataProvider;
			
			import mx.core.UIComponent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import uidata.UIElementBaseInfo;
			import uidata.vo.PropertyVo;
			
			private var _info:UIElementBaseInfo;
			private var _property:String;
			private var _propertyVo:PropertyVo;
			
			[Bindable]
			public var toolTips:String="";
			
			private function update():void
			{
				_info[_property] = getValue();
				_info.dispatchEvent(new UIEvent(UIEvent.INFO_UPDATE_PROPERTY,_propertyVo.isChangeView));
			}
			
			public function setData(property:String,propertyVo:PropertyVo,info:UIElementBaseInfo):void
			{
				toolTips = propertyVo.toolTip;
				
				_property = property;
				_propertyVo = propertyVo;
				_info = info;
				
				valueLabel.visible = false;
				combobox.visible = false;
				colorPicker.visible = false;
				
				switch(_propertyVo.propertyType)
				{
					case PropertyType.DATAPROVIDER:
						combobox.visible = true;
						combobox.dataProvider = _propertyVo.dataProvider;
						for(var i:int=0;i<combobox.dataProvider.length;i++){
							var obj:Object = combobox.dataProvider.getItemAt(i);
							if(obj.data == info[property])
							{
								combobox.selectedIndex = i;
								break;
							}
						}
						combobox.closeDropDown(false);
						break;
					case PropertyType.NUMBER:
						valueLabel.visible = true;
						valueLabel.restrict = "0-9";		
						break;
					case PropertyType.STRING:
						valueLabel.visible = true;
						break;
					case PropertyType.COLOR:
						valueLabel.width = 151;
						valueLabel.visible = true;
						colorPicker.visible = true;
						valueLabel.restrict = "0xX0-9";
						break;
				}
				
				nameLabel.text = property;
				valueLabel.text = String(info[property]);
			}
			
			protected function valueLabel_focusOutHandler(event:FocusEvent):void
			{
				update();
			}
			
			public function updateView():void
			{
				setData(_property,_propertyVo,_info);
			}
			
			public function dispose():void
			{
				if(parent)
				{
					Group(parent).removeElement(this);
				}
			}
			
			protected function combobox_changeHandler(event:IndexChangeEvent):void
			{
				update();				
			}
			
			protected function valueLabel_keyDownHandler(evt:KeyboardEvent):void
			{
				if(evt.keyCode == Keyboard.ENTER)
				{
					update();
				}
			}
			
			private function getValue():*
			{
				if(_propertyVo.dataProvider)
				{
					return combobox.selectedItem.data;
				}
				else if(_propertyVo.propertyType == PropertyType.NUMBER || _propertyVo.propertyType == PropertyType.COLOR)
				{
					return parseInt(valueLabel.text);			
				}else if(_propertyVo.propertyType == PropertyType.STRING)
				{
					return valueLabel.text;
				}
				return 0;
			}
			
		]]>
	</fx:Script>
		
	<s:Label id="nameLabel" x="10" y="10" width="60%" text="标签" toolTip="{toolTips}"/>
	<s:TextInput id="valueLabel" x="84" y="3" width="218" borderColor="#FFFFFF" chromeColor="#FFFFFF"
				 contentBackgroundColor="#F2F2F2" focusOut="valueLabel_focusOutHandler(event)" keyDown="valueLabel_keyDownHandler(event)"
				 prompt="value input"/>
	<s:ComboBox id="combobox" x="84" y="3" width="111" change="combobox_changeHandler(event)"/>
	<mx:ColorPicker id="colorPicker" x="243" y="3"/>
</s:Group>
