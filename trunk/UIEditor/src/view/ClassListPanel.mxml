<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
		 addedToStage="panel1_addedToStageHandler(event)" xmlns:view="view.*"
		 >
	<fx:Script>
		<![CDATA[
			import data.Config;
			
			import event.UIEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.DragEvent;
			import mx.events.ListEvent;
			
			import spark.components.List;
			import spark.events.TextOperationEvent;
			
			protected function panel1_addedToStageHandler(event:Event):void
			{
				if(App.rslLoaded)initData();
				else App.addEventListener(UIEvent.RSL_LOAD_COMPLETE,initData);
			}
			
			private function initData(evt:Event=null):void
			{
				init();
				initEvent();
			}
			
			private function init():void
			{
				if(App.xmlLoaded)
				{
					onXmlClassLoadedHandler();
				}
			}
			
			private function initEvent():void
			{
				App.addEventListener(UIEvent.XML_CLASS_LOADED,onXmlClassLoadedHandler);
				App.addEventListener(UIEvent.CLASS_UPDATE,onClassUpdateHandler);
			}
			
			protected function classList_itemDoubleClickHandler(evt:ListEvent):void
			{
				var className:String = evt.itemRenderer.data.value;
				App.dispathEvent(new UIEvent(UIEvent.SELECT_A_CLASS,className));
			}
			
			private function onXmlClassLoadedHandler(evt:UIEvent=null):void
			{
				classList.dataProvider = App.getChildList();
			}
			
			private function onClassUpdateHandler(evt:UIEvent):void
			{
				classList.dataProvider = App.getChildList();
				
				var className:String = String(evt.data);
				App.dispathEvent(new UIEvent(UIEvent.SELECT_A_CLASS,className));
			}
			
			protected function delClassHandler(event:MouseEvent):void
			{
				if(classList.selectedItem)
				{
					var className:String = classList.selectedItem.value;
					Alert.show("确定要删除该类","提示",Alert.OK | Alert.CANCEL,this,closeHandler);
				}
				
				function closeHandler(evt:CloseEvent):void
				{
					if(evt.detail == Alert.OK)
					{
						App.delClass(className);
						Alert.show("删除成功","",4,this);
						App.log.echo("删除类：",className);
					}
				}
			}
			
			protected function dragStartHandler(event:DragEvent):void
			{
//				trace(event);				
			}
			
			protected function classDragCompleteHandler(event:DragEvent):void
			{
//				trace(event);
			}
			
			protected function classList_changeHandler(event:ListEvent):void
			{
//				var item:Object = classList.selectedItem;
//				if(item)System.setClipboard(item.value);				
			}
			
			protected function input_changeHandler(event:TextOperationEvent):void
			{
				seachClassList.visible = !(input.text == "");
				
				if(input.text == "")return;
				
				var result:ArrayCollection = new ArrayCollection();
				for each (var data:Object in classList.dataProvider) 
				{
					var arr:ArrayCollection = data["children"] as ArrayCollection;
					for (var i:int = 0; i < arr.length; i++) 
					{
						var temp:String = (arr[i].label as String).toLocaleLowerCase();
						if(temp.indexOf(input.text.toLocaleLowerCase()) != -1)
						{
							result.addItem({label: arr[i].label,value: arr[i].label});
						}
					}
				}
				seachClassList.dataProvider = result;
			}
			
			protected function seachClassList_doubleClickHandler(event:MouseEvent):void
			{
				if(seachClassList.selectedItem != null)
				{
					var className:String = String(seachClassList.selectedItem.label);
					App.dispathEvent(new UIEvent(UIEvent.SELECT_A_CLASS,className));
					
					input.text = "";
					seachClassList.visible = false;
				}
			}
			
			protected function copyNameHandler(evt:MouseEvent):void
			{
				var item:Object = classList.selectedItem;
				if(item)System.setClipboard(item.value);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%">
		<s:TextInput id="input" width="100%" change="input_changeHandler(event)" restrict="^ "/>
		<mx:Tree id="classList" y="20" width="100%" height="90%" contentBackgroundColor="#FFFFFF"
				 doubleClickEnabled="true"
				 change="classList_changeHandler(event)" 
				 itemDoubleClick="classList_itemDoubleClickHandler(event)"
				 allowDragSelection="false"
				 dragEnabled="true"
				 dragComplete="classDragCompleteHandler(event)" 
				 dragStart="dragStartHandler(event)"
				 labelField="label"
				 horizontalScrollPolicy="on"
				 toolTip="双击切换或者选中一个类来编辑"
				 >
		</mx:Tree>
		<s:HGroup>
			<s:Image x="10" y="10" source="assets/systemIcons/gcroot_co.png" buttonMode="true" toolTip="删除类" click="delClassHandler(event)"/>
			<s:Image x="10" y="10" source="assets/systemIcons/package_obj.gif" buttonMode="true" toolTip="复制文本" click="copyNameHandler(event)"/>	
		</s:HGroup>
	</s:VGroup>
	<s:VGroup y="20" width="100%" height="100%">
		<s:List id="seachClassList" visible="false" width="100%" height="100%" doubleClickEnabled="true" doubleClick="seachClassList_doubleClickHandler(event)">
		</s:List>
	</s:VGroup>
	
</s:Panel>
