<?xml version="1.0" encoding="utf-8"?>
<mx:MenuBar xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:s="library://ns.adobe.com/flex/spark"
			xmlns:mx="library://ns.adobe.com/flex/mx"
			chromeColor="#FFFFFF" dataProvider="{menuBarCollection}" iconField="@icon"
			initialize="init(event)" itemClick="menuHandler(event)" labelField="@label">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import data.Config;
			import data.MenuConfig;
			import data.MenuType;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.managers.PopUpManager;
			
			import view.helper.LayoutWindow;
			[Bindable]
			public var menuBarCollection:XMLListCollection;
//			public var menuBarCollection:ArrayCollection;
			
			
			private function menuHandler(evt:MenuEvent):void  
			{
//				PopUpManager.addPopUp(UIConfigurePopWindow.instance,stage,true);
				switch(int(evt.item.@data))
				{
					case MenuType.PROJECT_SEETING:
						var configWindow:ConfigurePopWindow = new ConfigurePopWindow();
						configWindow.width = 500;
						configWindow.height = 500;
						configWindow.x = 100;
						PopUpManager.addPopUp(configWindow,this,true);
						break;
					case MenuType.LOG:
						var file:File = new File("C:\\Windows\\notepad.exe"); 
						var nativeProcessStartupInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();//AIR2.0的新类, 创建进程信息对象
						nativeProcessStartupInfo.executable = file;// 将file指定为可执行文件
						var process:NativeProcess = new NativeProcess();// 创建一个本地进程
						nativeProcessStartupInfo.arguments = Vector.<String>([
							File.applicationDirectory.nativePath + "\\log.txt",
						]);
						process.start(nativeProcessStartupInfo);// 运行本地进程
						break;
					case MenuType.ERROR_LOG:
						App.log.toggle();
						break;
					case MenuType.LAYOUT_TOOL:
						var layoutWindow:LayoutWindow = new LayoutWindow();
						layoutWindow.x = 100;
						PopUpManager.addPopUp(layoutWindow,this);
						break;
				}
			}
			
			protected function init(event:FlexEvent):void
			{
				MenuType.setup();
				menuBarCollection = new XMLListCollection(MenuType.menubarXML);
//				menuBarCollection = new MenuConfig().menuData;
			}
			
		]]>
	</fx:Script>
</mx:MenuBar>